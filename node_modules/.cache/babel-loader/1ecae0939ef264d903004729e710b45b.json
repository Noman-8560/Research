{"ast":null,"code":"import _slicedToArray from \"E:\\\\test\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\test\\\\test-app\\\\src\\\\App.js\";\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert'; // import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  var _useState = useState('light'),\n      _useState2 = _slicedToArray(_useState, 2),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      typ: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 1500);\n  };\n\n  var toggleMode = function toggleMode() {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#151D3B';\n      showAlert(\"Dark mode is enable\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enable\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"Textutils\",\n    title1: \"Home\",\n    title2: \"About\",\n    mode: mode,\n    toggleMode: toggleMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextForm, {\n    showAlert: showAlert,\n    heading: \"Enter a Text to Analyze Below\",\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }))))));\n}\n\nexport default App;","map":{"version":3,"sources":["E:/test/test-app/src/App.js"],"names":["About","Navbar","TextForm","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","typ","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"mappings":";;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAIA,SAASC,GAAT,GAAe;AAAA,kBACYF,QAAQ,CAAC,OAAD,CADpB;AAAA;AAAA,MACNG,IADM;AAAA,MACCC,OADD;;AAAA,mBAEcJ,QAAQ,CAAC,IAAD,CAFtB;AAAA;AAAA,MAENK,KAFM;AAAA,MAEEC,QAFF;;AAIb,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAASC,IAAT,EAAgB;AAChCH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAACF,OADG;AAEPG,MAAAA,GAAG,EAACF;AAFG,KAAD,CAAR;AAIAG,IAAAA,UAAU,CAAC,YAAM;AACfN,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GARD;;AAUA,MAAMO,UAAU,GAAG,SAAbA,UAAa,GAAK;AACtB,QAAGV,IAAI,KAAG,OAAV,EAAkB;AAChBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAU,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqC,SAArC;AACAV,MAAAA,SAAS,CAAC,qBAAD,EAAuB,SAAvB,CAAT;AACAO,MAAAA,QAAQ,CAACI,KAAT,GAAe,uBAAf;AACD,KALD,MAMI;AACFd,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAU,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqC,OAArC;AACAV,MAAAA,SAAS,CAAC,sBAAD,EAAwB,SAAxB,CAAT;AACAO,MAAAA,QAAQ,CAACI,KAAT,GAAe,wBAAf;AACD;AACF,GAbD;;AAeA,sBACE,uDACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,WAAd;AAA0B,IAAA,MAAM,EAAC,MAAjC;AAAwC,IAAA,MAAM,EAAC,OAA/C;AAAuD,IAAA,IAAI,EAAEf,IAA7D;AAAmE,IAAA,UAAU,EAAEU,UAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,KAAD;AAAQ,IAAA,KAAK,EAAER,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADL,eAIK,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEE,SAArB;AAAgC,IAAA,OAAO,EAAC,+BAAxC;AAAwE,IAAA,IAAI,EAAEJ,IAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJL,CADA,CAHD,CADA,CADF;AAkBD;;AAED,eAAeD,GAAf","sourcesContent":["import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode , setMode] = useState('light');\n  const [alert , setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      typ:type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () =>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor= '#151D3B';\n      showAlert(\"Dark mode is enable\",\"success\");\n      document.title=\"TextUtils - Dark Mode\";\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor= 'white';\n      showAlert(\"Light mode is enable\",\"success\");\n      document.title=\"TextUtils - Light Mode\";\n    }\n  }\n\n  return (\n    <>\n    <Router>\n     <Navbar title=\"Textutils\" title1=\"Home\" title2=\"About\" mode={mode} toggleMode={toggleMode} />\n     <Alert  alert={alert} />\n     <div className='container my-3'>\n     <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/users\">\n          <TextForm showAlert={showAlert} heading='Enter a Text to Analyze Below' mode={mode} />\n          </Route>\n        </Switch>\n     </div>\n     </Router>\n    </>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}