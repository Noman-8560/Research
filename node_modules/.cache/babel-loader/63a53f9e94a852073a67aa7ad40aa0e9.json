{"ast":null,"code":"import _slicedToArray from \"E:\\\\test\\\\test-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\test\\\\test-app\\\\src\\\\components\\\\TextForm.js\";\nimport React, { useState } from 'react';\nexport default function TextForm(props) {\n  var handleUpClick = function handleUpClick() {\n    var newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\n  };\n\n  var handleLoClick = function handleLoClick() {\n    var newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\n  };\n\n  var handleClClick = function handleClClick() {\n    var newText = ' ';\n    setText(newText);\n    props.showAlert(\"Clear the text!\", \"success\");\n  };\n\n  var handleCopy = function handleCopy() {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showAlert(\"Copied to Clipboard\", \"success\");\n  };\n\n  var handleExtraSpaces = function handleExtraSpaces() {\n    var newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Remove Extra Spaces!\", \"success\");\n  };\n\n  var handleOnChange = function handleOnChange(event) {\n    setText(event.target.value);\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    style: {\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    value: text,\n    onChange: handleOnChange,\n    style: {\n      backgroundColor: props.mode === 'dark' ? '#151D3B' : 'white',\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    id: \"myBox\",\n    rows: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleUpClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }\n  }, \"Convert to Uppercase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleLoClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }\n  }, \"Convert to Lowercase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleClClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 1\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 1\n    }\n  }, \"Copy Text\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mx-1\",\n    onClick: handleExtraSpaces,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }\n  }, \"Remove Extra Spaces\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    style: {\n      color: props.mode === 'dark' ? 'white' : 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, \"Your Text Summary\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, text.length === 0 ? 0 : text.trim().split(\" \").length, \" words and \", text.length, \" characters\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, 0.08 * text.split(\" \").length, \" Minutes Read\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }, text.length > 0 ? text : \"Enter Something in TextBox\")));\n}","map":{"version":3,"sources":["E:/test/test-app/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleClClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","handleExtraSpaces","split","join","handleOnChange","event","target","color","mode","heading","backgroundColor","length","trim"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    const newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n  }\r\n  const handleLoClick = () => {\r\n    const newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n  }\r\n  const handleClClick = () => {\r\n    const newText = ' ';\r\n    setText(newText);\r\n    props.showAlert(\"Clear the text!\",\"success\");\r\n  }\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to Clipboard\",\"success\");\r\n  }\r\n  const handleExtraSpaces = () => {\r\n   var newText = text.split(/[ ]+/);\r\n   setText(newText.join(\" \"));\r\n   props.showAlert(\"Remove Extra Spaces!\",\"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) =>{\r\n     setText(event.target.value);\r\n  }\r\n\r\n  const [text ,setText] = useState('');\r\n  return (\r\n    <>\r\n<div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n<h2>{props.heading}</h2>    \r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#151D3B':'white' ,color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className='btn btn-primary mx-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n<button className='btn btn-primary mx-1' onClick={handleLoClick}>Convert to Lowercase</button>\r\n<button className='btn btn-primary mx-1' onClick={handleClClick}>Clear</button>\r\n<button className='btn btn-primary mx-1' onClick={handleCopy}>Copy Text</button>   \r\n<button className='btn btn-primary mx-1' onClick={handleExtraSpaces}>Remove Extra Spaces</button>     \r\n</div>\r\n<div className='container my-3' style={{color: props.mode==='dark'?'white':'black'}}>\r\n  <h2>Your Text Summary</h2>\r\n  <p>{text.length===0?0:text.trim().split(\" \").length} words and {text.length} characters</p>\r\n  <p>{0.08 * text.split(\" \").length} Minutes Read</p>\r\n  <h2>Preview</h2>\r\n  <p>{text.length>0?text:\"Enter Something in TextBox\"}</p>\r\n</div>\r\n</>\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}